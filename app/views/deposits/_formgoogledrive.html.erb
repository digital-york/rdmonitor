<div id="jstree_div" title="Select files from Google Drive">Loading Google Drive - please wait...</div>

<div id="jstree_status">
  <div id="jstree_files_status" style="float:left"></div>
  <div id="jstree_loading_status" style="float:left"></div>
</div>
<div style="clear:both"></div>

<script>
  // initially, we may or may not be connected/authenticated to the Google API 
  var googleApiAuthenticated = <%= connected_to_google_api? %>;
  var googleWindow;
  // take a count of how many folders are being opened so that I can print out a "still loading" message
  var loading_counter = 0;
  // given a tree node, work out whether its parent is selected and return its relative path accordingly
  function relpath_to_node (jstree, node) {
    var id_path = jstree.get_path(node, false, true);
    var name_path = jstree.get_path(node, false, false);
    // for each parent in the paths, if it's not selected, remove it and all its parents from the array
    for (var i = id_path.length - 1; i >= 0; i--) {
      if (!jstree.is_selected(id_path[i])) {
        // remove this and all elements before this from arrays
        id_path.splice(0, i+1);
        name_path.splice(0, i+1);
        break;
      }
    }
    return name_path.join("/");
  }

  $('#jstree_div').on("changed.jstree", function (e, data) {
    // if a folder is selected/checked, open it and automatically select all of its contents (recursively if there are subfolders)  
    if (data.changed.selected[0]) {
      if (data.instance.is_parent(data.changed.selected[0])) {
        loading_counter++;
        $("#jstree_loading_status").html("...still loading...");
        data.instance.open_node(data.changed.selected[0], function (d2) {
          // for each child in the selected and opened node, select it
          for (var i = 0; i < d2.children.length; i++) {
            data.instance.select_node(data.instance.get_node(d2.children[i]));
          }
          loading_counter--;
          if (loading_counter === 0) {
            $("#jstree_loading_status").html("");
          }
        });
      }
    }
    if (data.changed.deselected[0]) {
      // if a folder is deselected/unchecked, automatically deselect/uncheck all of its contents (recursively if there are subfolders)
      if (data.instance.is_parent(data.changed.deselected[0])) {
        var node = data.instance.get_node(data.changed.deselected[0]);
        for (var k = 0; k < node.children.length; k++) {
          data.instance.deselect_node(node.children[k]);
        }
      }
    }
    // update the "status" message of the dialog with the number of selected files
    $("#jstree_files_status").html(data.instance.get_bottom_selected(false).length + " files selected");
  });

  $( function() {
    dialog = $( "#jstree_div" ).dialog({
      autoOpen: false,
      resizable: true,
      height: 500,
      width: 600,
      modal: true,
      buttons: {
        "OK": function() {
          // attach the selected files to the form as hidden input params
          // get an array of selected nodes
          selectedNodes = $("#jstree_div").jstree("get_bottom_selected", true);
          // remove any existing selections from the form
          $("input").remove("[name='selected_files[]']");
          $("input").remove("[name='selected_paths[]']");
          $("input").remove("[name='selected_mimetypes[]']");
          $("input").remove("[name='selected_sizes[]']");
          // for each selected file
          for (var i = 0; i < selectedNodes.length; i++) {
            // write it to the html form as a hidden input
            $("<input type='hidden'>").attr('name', 'selected_files[]').attr('value', selectedNodes[i].id).appendTo("#new_deposit");
            // write the desired path of this file to a hidden input as well
            $("<input type='hidden'>").attr('name', 'selected_paths[]').attr('value', relpath_to_node($("#jstree_div").jstree(), selectedNodes[i])).appendTo("#new_deposit");
            // write the mime type of this file to a hidden input as well
            $("<input type='hidden'>").attr('name', 'selected_mimetypes[]').attr('value', selectedNodes[i].data["mime_type"]).appendTo("#new_deposit");
            // write the size of this file to a hidden input as well
            $("<input type='hidden'>").attr('name', 'selected_sizes[]').attr('value', selectedNodes[i].data["size"]).appendTo("#new_deposit");
          }
          // update the status message next to the "select google drive files"
          $("#google_drive_status2").html(selectedNodes.length + " files selected");
          $( this ).dialog( "close" );
        },
        Cancel: function() {
          $( this ).dialog( "close" );
        }
      }
    });
    $("#jstree_status").appendTo(".ui-dialog-buttonpane");
    // when the user clicks the "Choose files..." button
    $( "#google-drive-btn" ).button().on( "click", function() {
      // if authenticated to Google API, show Google Drive browser, else, open a popup window for connecting to Google API
      if (googleApiAuthenticated) {
        open_google_drive_browser();
      } else {
        googleWindow = window.open("<%= connect_googledrive_index_path %>", "_googlewindow", "width=500,height=500,resizable");
      }
    });
  });

  // when the "connect to google API" process has finished, the following function will be called
  function authentication_complete () {
    googleApiAuthenticated = true;
    googleWindow.close();
    open_google_drive_browser();
  }

  // open the dialog for the jstree and present it
  function open_google_drive_browser () {
    dialog.dialog( "open" );
    // initialise the jstree
    $(function () { 
      $('#jstree_div').jstree({
        "plugins" : ["checkbox", "changed"],
        'core': {
          'data': {
            'url' : function (node) {
              return "<%= googledrive_index_path %>.json?folder=" + (node.id === "#" ? "root" : node.id)
            },
            'data' : function (node) {

            },
            "error": function (jqXHR, textStatus, errorThrown) { 
              $('#jstree_div').html("<h3>Error</h3><p>There was an error while connecting to your Google Drive. Please try closing your browser and re-opening it.</p>"); 
            }
          }
        },
        'checkbox': {
          three_state: false,
        }
      }); 
    }); 
  }
</script>

